%!PS-Adobe-2.0 EPSF-2.0
%%Title: generated/random_rep/dh//load_%.eps
%%Creator: gnuplot 5.0 patchlevel 5
%%CreationDate: Thu Nov 14 11:11:29 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (generated/random_rep/dh//load_%.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 5)
  /Author (billae)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Nov 14 11:11:29 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 7200.00 5040.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
602 448 M
63 0 V
stroke
518 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 1282 M
63 0 V
stroke
518 1282 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 22)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 2116 M
63 0 V
stroke
518 2116 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 24)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 2951 M
63 0 V
stroke
518 2951 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 26)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 3785 M
63 0 V
stroke
518 3785 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 28)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 4619 M
63 0 V
stroke
518 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 30)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
602 448 M
0 63 V
stroke
602 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1871 448 M
0 63 V
stroke
1871 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 50)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3140 448 M
0 63 V
stroke
3140 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4409 448 M
0 63 V
stroke
4409 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 150)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5678 448 M
0 63 V
stroke
5678 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 200)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6947 448 M
0 63 V
stroke
6947 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 250)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
0.93 0.51 0.93 C 602 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 2125 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 3648 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 5170 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 6693 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 8216 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 9739 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 11262 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 12784 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 14307 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 15830 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 17353 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 18876 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 20398 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 21921 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 23444 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 24967 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 26490 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 28012 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 29535 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 31058 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 32581 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 34104 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 35626 448 M
0 4171 V
stroke
LTb
0.93 0.51 0.93 C 37149 448 M
0 4171 V
stroke
LTb
LCb setrgbcolor
LCb setrgbcolor
112 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (percentage of processed requests)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
3774 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (time \(in minutes\))]
] -46.7 MCshow
LTb
LCb setrgbcolor
3774 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (workload of each server)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
5372 3856 N
0 700 V
1491 0 V
0 -700 V
-1491 0 V
Z stroke
% Begin plot #1
1.000 UP
2.000 UL
LTb
0.00 0.60 0.00 C 602 2820 M
729 2428 L
127 141 V
127 116 V
127 -109 V
127 -340 V
126 855 V
127 -246 V
127 -103 V
127 48 V
127 -918 V
127 60 V
127 1054 V
127 -616 V
127 -472 V
127 152 V
126 432 V
127 -557 V
127 1050 V
127 -581 V
127 402 V
127 -195 V
127 496 V
127 -608 V
127 -514 V
127 864 V
126 -732 V
127 252 V
127 -259 V
127 257 V
127 -145 V
127 682 V
127 -338 V
127 95 V
127 -100 V
127 -107 V
126 208 V
127 -385 V
127 134 V
127 -441 V
127 502 V
127 1 V
127 454 V
127 -551 V
127 476 V
127 -232 V
126 -204 V
127 386 V
602 2820 Pls
729 2428 Pls
856 2569 Pls
983 2685 Pls
1110 2576 Pls
1237 2236 Pls
1363 3091 Pls
1490 2845 Pls
1617 2742 Pls
1744 2790 Pls
1871 1872 Pls
1998 1932 Pls
2125 2986 Pls
2252 2370 Pls
2379 1898 Pls
2506 2050 Pls
2632 2482 Pls
2759 1925 Pls
2886 2975 Pls
3013 2394 Pls
3140 2796 Pls
3267 2601 Pls
3394 3097 Pls
3521 2489 Pls
3648 1975 Pls
3775 2839 Pls
3901 2107 Pls
4028 2359 Pls
4155 2100 Pls
4282 2357 Pls
4409 2212 Pls
4536 2894 Pls
4663 2556 Pls
4790 2651 Pls
4917 2551 Pls
5044 2444 Pls
5170 2652 Pls
5297 2267 Pls
5424 2401 Pls
5551 1960 Pls
5678 2462 Pls
5805 2463 Pls
5932 2917 Pls
6059 2366 Pls
6186 2842 Pls
6313 2610 Pls
6439 2406 Pls
6566 2792 Pls
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LTb
1.00 0.80 0.20 C 602 2621 M
127 96 V
856 2432 L
983 2199 L
127 106 V
127 -252 V
126 828 V
127 -586 V
127 -159 V
127 -68 V
127 688 V
127 -431 V
127 682 V
127 -963 V
127 891 V
127 -177 V
126 -232 V
127 -48 V
127 -147 V
127 608 V
127 -208 V
127 78 V
127 -770 V
127 824 V
127 -263 V
127 -397 V
126 -203 V
127 1633 V
4155 2503 L
127 -138 V
127 232 V
127 296 V
127 -479 V
127 167 V
127 209 V
127 -692 V
126 340 V
127 469 V
127 84 V
127 -116 V
127 323 V
127 -927 V
127 250 V
127 213 V
127 -132 V
127 -333 V
126 296 V
127 163 V
602 2621 Crs
729 2717 Crs
856 2432 Crs
983 2199 Crs
1110 2305 Crs
1237 2053 Crs
1363 2881 Crs
1490 2295 Crs
1617 2136 Crs
1744 2068 Crs
1871 2756 Crs
1998 2325 Crs
2125 3007 Crs
2252 2044 Crs
2379 2935 Crs
2506 2758 Crs
2632 2526 Crs
2759 2478 Crs
2886 2331 Crs
3013 2939 Crs
3140 2731 Crs
3267 2809 Crs
3394 2039 Crs
3521 2863 Crs
3648 2600 Crs
3775 2203 Crs
3901 2000 Crs
4028 3633 Crs
4155 2503 Crs
4282 2365 Crs
4409 2597 Crs
4536 2893 Crs
4663 2414 Crs
4790 2581 Crs
4917 2790 Crs
5044 2098 Crs
5170 2438 Crs
5297 2907 Crs
5424 2991 Crs
5551 2875 Crs
5678 3198 Crs
5805 2271 Crs
5932 2521 Crs
6059 2734 Crs
6186 2602 Crs
6313 2269 Crs
6439 2565 Crs
6566 2728 Crs
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LTb
0.60 0.00 0.80 C 602 2400 M
127 26 V
856 2216 L
127 287 V
127 -471 V
127 1029 V
126 -962 V
127 860 V
127 -514 V
127 179 V
127 525 V
127 -181 V
127 -831 V
127 969 V
127 -717 V
127 281 V
126 -11 V
127 -127 V
127 236 V
127 -637 V
127 230 V
127 478 V
127 -267 V
127 -79 V
127 371 V
127 -649 V
126 277 V
127 -406 V
127 728 V
127 -280 V
127 738 V
127 -831 V
127 -34 V
127 -190 V
127 553 V
127 589 V
126 -788 V
127 15 V
127 -751 V
127 1113 V
127 -202 V
127 -216 V
127 -174 V
127 -201 V
127 159 V
127 404 V
126 111 V
127 -718 V
602 2400 Star
729 2426 Star
856 2216 Star
983 2503 Star
1110 2032 Star
1237 3061 Star
1363 2099 Star
1490 2959 Star
1617 2445 Star
1744 2624 Star
1871 3149 Star
1998 2968 Star
2125 2137 Star
2252 3106 Star
2379 2389 Star
2506 2670 Star
2632 2659 Star
2759 2532 Star
2886 2768 Star
3013 2131 Star
3140 2361 Star
3267 2839 Star
3394 2572 Star
3521 2493 Star
3648 2864 Star
3775 2215 Star
3901 2492 Star
4028 2086 Star
4155 2814 Star
4282 2534 Star
4409 3272 Star
4536 2441 Star
4663 2407 Star
4790 2217 Star
4917 2770 Star
5044 3359 Star
5170 2571 Star
5297 2586 Star
5424 1835 Star
5551 2948 Star
5678 2746 Star
5805 2530 Star
5932 2356 Star
6059 2155 Star
6186 2314 Star
6313 2718 Star
6439 2829 Star
6566 2111 Star
% End plot #3
% Begin plot #4
1.000 UP
2.000 UL
LTb
0.20 0.47 1.00 C 602 2294 M
127 269 V
127 355 V
983 2747 L
127 474 V
127 -437 V
126 -721 V
127 -28 V
127 777 V
127 -160 V
127 -295 V
127 552 V
127 -905 V
127 610 V
127 298 V
127 -255 V
126 -189 V
127 732 V
2886 2060 L
127 610 V
127 -424 V
127 -361 V
127 541 V
127 -137 V
127 406 V
127 182 V
126 658 V
4028 2057 L
127 660 V
127 161 V
127 -824 V
127 -148 V
127 851 V
127 -72 V
127 -662 V
127 210 V
126 239 V
127 -98 V
127 533 V
127 -555 V
127 -625 V
127 1142 V
127 -530 V
127 541 V
127 -504 V
127 160 V
126 -202 V
127 169 V
602 2294 Box
729 2563 Box
856 2918 Box
983 2747 Box
1110 3221 Box
1237 2784 Box
1363 2063 Box
1490 2035 Box
1617 2812 Box
1744 2652 Box
1871 2357 Box
1998 2909 Box
2125 2004 Box
2252 2614 Box
2379 2912 Box
2506 2657 Box
2632 2468 Box
2759 3200 Box
2886 2060 Box
3013 2670 Box
3140 2246 Box
3267 1885 Box
3394 2426 Box
3521 2289 Box
3648 2695 Box
3775 2877 Box
3901 3535 Box
4028 2057 Box
4155 2717 Box
4282 2878 Box
4409 2054 Box
4536 1906 Box
4663 2757 Box
4790 2685 Box
4917 2023 Box
5044 2233 Box
5170 2472 Box
5297 2374 Box
5424 2907 Box
5551 2352 Box
5678 1727 Box
5805 2869 Box
5932 2339 Box
6059 2880 Box
6186 2376 Box
6313 2536 Box
6439 2334 Box
6566 2503 Box
% End plot #4
% Begin plot #5
1.000 UL
LTb
0.93 0.51 0.93 C % End plot #5
LCw setrgbcolor
1.000 5372 3856 1491 700 BoxColFill
1.000 UL
LTb
LCb setrgbcolor
5372 3856 N
0 700 V
1491 0 V
0 -700 V
-1491 0 V
Z stroke
% Begin plot #6
1.000 UP
2.000 UL
LTb
0.00 0.60 0.00 C LCb setrgbcolor
6296 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (server 0)]
] -46.7 MRshow
1.000 UP
2.000 UL
LTb
0.00 0.60 0.00 C 6380 4486 M
399 0 V
6579 4486 Pls
% End plot #6
% Begin plot #7
1.000 UP
2.000 UL
LTb
1.00 0.80 0.20 C LCb setrgbcolor
6296 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (server 1)]
] -46.7 MRshow
1.000 UP
2.000 UL
LTb
1.00 0.80 0.20 C 6380 4346 M
399 0 V
6579 4346 Crs
% End plot #7
% Begin plot #8
1.000 UP
2.000 UL
LTb
0.60 0.00 0.80 C LCb setrgbcolor
6296 4206 M
[ [(Helvetica) 140.0 0.0 true true 0 (server 2)]
] -46.7 MRshow
1.000 UP
2.000 UL
LTb
0.60 0.00 0.80 C 6380 4206 M
399 0 V
6579 4206 Star
% End plot #8
% Begin plot #9
1.000 UP
2.000 UL
LTb
0.20 0.47 1.00 C LCb setrgbcolor
6296 4066 M
[ [(Helvetica) 140.0 0.0 true true 0 (server 3)]
] -46.7 MRshow
1.000 UP
2.000 UL
LTb
0.20 0.47 1.00 C 6380 4066 M
399 0 V
6579 4066 Box
% End plot #9
% Begin plot #10
1.000 UL
LTb
0.93 0.51 0.93 C LCb setrgbcolor
6296 3926 M
[ [(Helvetica) 140.0 0.0 true true 0 (Rebalancing)]
] -46.7 MRshow
1.000 UL
LTb
0.93 0.51 0.93 C 6380 3926 M
399 0 V
% End plot #10
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
602 4619 N
602 448 L
6345 0 V
0 4171 V
-6345 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
